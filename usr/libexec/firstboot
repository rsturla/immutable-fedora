#!/usr/bin/env bash

set -euox pipefail

sudo -v

# An idempotent firstboot script to install and configure the Fedora Silverblue OS.
# Most config has already been done in the Containerfile, but this script is required to do some user-level config.

setup_automatic_flatpak_updates() {
  echo "Setting up automatic flatpak updates..."
  systemctl --user enable --now flatpak-user-update.timer
}

setup_flathub() {
  echo "Removing filtered Flathub repository..."
  flatpak remote-delete flathub --force ||:
  echo "Adding unfiltered Flathub repository..."
  flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
}

wait_for_network() {
  echo "Waiting for network..."
  until ping -q -c 1 flathub.org; do sleep 1; done
}

replace_fedora_flatpaks_with_flathub() {
  echo "Replacing Fedora flatpaks with Flathub flatpaks..."
  flatpak install --user --noninteractive org.gnome.Platform//43
  flatpak install --user --noninteractive --reinstall flathub "$(flatpak list --app-runtime=org.fedoraproject.Platform --columns=application | tail -n +1 )"
}

remove_fedora_preinstalled_flatpaks() {
  echo "Removing Fedora preinstalled flatpaks..."
  flatpak remove --system --noninteractive --all ||:
}

install_flatpaks() {
  echo "Installing flatpaks..."
  # Read list of Flatpaks from /etc/firstboot/config.json and install them
  flatpaks=$(jq -r '.flatpaks[]' /etc/firstboot/config.json)
  for flatpak in $flatpaks; do
    flatpak install --user --noninteractive "$flatpak"
  done
}

install_rpms() {
  echo "Installing RPMs..."
  # Read list of RPMs from /etc/firstboot/config.json and install them
  rpms=$(jq -r '.rpms[]' /etc/firstboot/config.json)
  rpm-ostree install --idempotent -y "$rpms"
}

configure_user_groups() {
  echo "Configuring user groups..."
  # Read list of groups from /etc/firstboot/config.json and add user to them permanently
  #Â This must be done by appending to /etc/group, as usermod -aG doesn't work on firstboot
  groups=$(jq -r '.userGroups[]' /etc/firstboot/config.json)
  for group in $groups; do
    echo "TODO: Add current user to group $group"
    grep -E "^$group:" /usr/lib/group | sudo tee -a /etc/group
  done
}

mark_complete() {
  echo "Firstboot complete!"
  # Get hash of this script
  hash=$(sha256sum "$0" | cut -d' ' -f1)
  packages_hash=$(sha256sum /etc/firstboot/config.json | cut -d' ' -f1)
  # Write hash to file
  echo "firstboot: $hash" >> ~/.config/firstboot-complete
  echo "packages: $packages_hash" >> ~/.config/firstboot-complete
}

check_if_complete() {
  # Get hash of firstboot script
  hash=$(sha256sum "$0" | cut -d' ' -f1)
  packages_hash=$(sha256sum /etc/firstboot/config.json | cut -d' ' -f1)
  # Check if firstboot has already been run with the same script and config.json contents
  if grep -q "firstboot: $hash" ~/.config/firstboot-complete && grep -q "packages: $packages_hash" ~/.config/firstboot-complete; then
    echo "Firstboot already complete!"
    exit 0
  fi
}

display_message() {
  # Display a GUI message to the user
  # $1: message to display
  # $2: title of message box
  # $3: type of message box (info, warning, error)
  zenity --"$3" --title="$2" --text="$1"
}

main() {
  check_if_complete
  wait_for_network
  setup_automatic_flatpak_updates
  setup_flathub
  replace_fedora_flatpaks_with_flathub
  remove_fedora_preinstalled_flatpaks
  install_rpms
  install_flatpaks
  configure_user_groups
  mark_complete

  display_message "Firstboot complete! \nPlease reboot to complete the installation." "Firstboot" "info"
}

main
